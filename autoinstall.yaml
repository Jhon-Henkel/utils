#cloud-config
autoinstall:
  version: 1
  identity:
    realname: "Jhon"
    username: "Jhon"
    hostname: "jhon-pc"
    password: "de56a064fa461cbba5674b9ae033d01013cee5a5fd8c96f1b1a0424380addf0495055ebe05e48602d956fbfe18617225b750c41a6a423b29db51d47222545084"  # Use `mkpasswd -m sha-512` para gerar um hash seguro
  keyboard:
    layout: "br"
  timezone: "America/Sao_Paulo"
  packages:
    - wget
    - htop
    - vim
    - make
    - golang-go
    - flameshot
    - gnome-shell-extension-dash-to-dock
  late-commands:
    - curtin in-target -- /bin/bash -c "apt update && apt upgrade -y"

    # Instalação do Google Chrome
    - curtin in-target -- /bin/bash -c "wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
    - curtin in-target -- /bin/bash -c "dpkg -i google-chrome-stable_current_amd64.deb || apt --fix-broken install -y"
    - curtin in-target -- /bin/bash -c "rm google-chrome-stable_current_amd64.deb"

    # Sublime Text
    - curtin in-target -- /bin/bash -c "wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | gpg --dearmor | tee /etc/apt/trusted.gpg.d/sublimehq-archive.gpg > /dev/null"
    - curtin in-target -- /bin/bash -c "echo 'deb https://download.sublimetext.com/ apt/stable/' | tee /etc/apt/sources.list.d/sublime-text.list"
    - curtin in-target -- /bin/bash -c "apt update && apt install -y sublime-text"

    # JetBrains Toolbox
    - curtin in-target -- /bin/bash -c "wget -c https://download.jetbrains.com/toolbox/jetbrains-toolbox-2.5.2.35332.tar.gz"
    - curtin in-target -- /bin/bash -c "tar -xzf jetbrains-toolbox-2.3.0.30876.tar.gz -C /opt"
    - curtin in-target -- /bin/bash -c "apt install -y libfuse2"
    - curtin in-target -- /bin/bash -c "/opt/jetbrains-toolbox-*/jetbrains-toolbox"
    - curtin in-target -- /bin/bash -c "rm jetbrains-toolbox-2.3.0.30876.tar.gz"

    # Instalação do Docker
    - curtin in-target -- /bin/bash -c "for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do apt remove -y $pkg; done"
    - curtin in-target -- /bin/bash -c "apt update"
    - curtin in-target -- /bin/bash -c "apt install -y ca-certificates curl"
    - curtin in-target -- /bin/bash -c "install -m 0755 -d /etc/apt/keyrings"
    - curtin in-target -- /bin/bash -c "curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc"
    - curtin in-target -- /bin/bash -c "chmod a+r /etc/apt/keyrings/docker.asc"
    - curtin in-target -- /bin/bash -c "echo 'deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo \"bookworm\") stable' | tee /etc/apt/sources.list.d/docker.list > /dev/null"
    - curtin in-target -- /bin/bash -c "apt update && apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin"
    - curtin in-target -- /bin/bash -c "groupadd docker || true"
    - curtin in-target -- /bin/bash -c "usermod -aG docker jhon"
    - curtin in-target -- /bin/bash -c "newgrp docker"

    # Spotify
    - curtin in-target -- /bin/bash -c "curl -sS https://download.spotify.com/debian/pubkey_C85668DF69375001.gpg | gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg"
    - curtin in-target -- /bin/bash -c "echo 'deb http://repository.spotify.com stable non-free' | tee /etc/apt/sources.list.d/spotify.list"
    - curtin in-target -- /bin/bash -c "apt update && apt install -y spotify-client"

    # Diodon
    - curtin in-target -- /bin/bash -c "add-apt-repository -y ppa:diodon-team/stable"
    - curtin in-target -- /bin/bash -c "apt update && apt install -y diodon"

    # Node.js e npm
    - curtin in-target -- /bin/bash -c "curl -fsSL https://deb.nodesource.com/setup_20.x | bash -"
    - curtin in-target -- /bin/bash -c "apt install -y nodejs"

    # Git
    - curtin in-target -- /bin/bash -c "add-apt-repository -y ppa:git-core/ppa"
    - curtin in-target -- /bin/bash -c "apt update && apt install -y git"

    # Ionic CLI
    - curtin in-target -- /bin/bash -c "npm install -g @ionic/cli"

    # Java SDK
    - curtin in-target -- /bin/bash -c "wget https://download.oracle.com/java/23/latest/jdk-23_linux-x64_bin.deb"
    - curtin in-target -- /bin/bash -c "dpkg -i jdk-23_linux-x64_bin.deb || apt --fix-broken install -y"
    - curtin in-target -- /bin/bash -c "rm jdk-23_linux-x64_bin.deb"

    # Termius
    - curtin in-target -- /bin/bash -c "wget https://www.termius.com/download/linux/Termius.deb"
    - curtin in-target -- /bin/bash -c "dpkg -i Termius.deb || apt --fix-broken install -y"
    - curtin in-target -- /bin/bash -c "rm Termius.deb"
    - curtin in-target -- /bin/bash -c "sudo chown root:root /opt/Termius/chrome-sandbox"
    - curtin in-target -- /bin/bash -c "- curtin in-target -- /bin/bash -c "sudo chmod 4755 /opt/Termius/chrome-sandbox"

    # Postman
    - curtin in-target -- /bin/bash -c "wget https://dl.pstmn.io/download/latest/linux64 -O postman.tar.gz"
    - curtin in-target -- /bin/bash -c "tar -xzf postman.tar.gz"
    - curtin in-target -- /bin/bash -c "rm -rf /opt/Postman"
    - curtin in-target -- /bin/bash -c "mv Postman /opt/Postman"
    - curtin in-target -- /bin/bash -c "ln -s /opt/Postman/Postman /usr/bin/postman"
    - curtin in-target -- /bin/bash -c "echo '[Desktop Entry]\nEncoding=UTF-8\nName=Postman\nExec=postman\nIcon=/opt/Postman/app/resources/app/assets/icon.png\nTerminal=false\nType=Application\nCategories=Development;' > ~/.local/share/applications/postman.desktop"
    - curtin in-target -- /bin/bash -c "rm postman.tar.gz"

    # System Config
    - curtin in-target -- /bin/bash -c "gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-down '[]'"
    - curtin in-target -- /bin/bash -c "gsettings set org.gnome.desktop.interface gtk-theme 'Yaru-dark'"
    - curtin in-target -- /bin/bash -c "gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'"
    - curtin in-target -- /bin/bash -c "gsettings set org.gnome.shell.extensions.dash-to-dock autohide true"
    - curtin in-target -- /bin/bash -c "gsettings set org.gnome.shell.extensions.dash-to-dock panel-mode false"
    - curtin in-target -- /bin/bash -c "gsettings set org.gnome.shell.extensions.dash-to-dock dock-position 'BOTTOM'"
    - curtin in-target -- /bin/bash -c "gsettings set org.gnome.shell.extensions.dash-to-dock multi-monitor true"
    - curtin in-target -- /bin/bash -c "gsettings set org.gnome.shell.extensions.dash-to-dock dock-fixed false"
    - curtin in-target -- /bin/bash -c "gsettings set org.gnome.shell.extensions.dash-to-dock show-mounts false"
    - curtin in-target -- /bin/bash -c "gsettings set org.gnome.shell favorite-apps \"['application://gnome-terminal.desktop', 'application://nautilus.desktop', 'application://libreoffice-writer.desktop']\""
    - curtin in-target -- /bin/bash -c "mkdir -p /home/jhon/projects"
    - curtin in-target -- /bin/bash -c "echo 'file:///home/jhon/projects' | tee -a /home/jhon/.config/gtk-3.0/bookmarks > /dev/null"
    - curtin in-target -- /bin/bash -c "cp /cdrom/Makefile /home/jhon/Makefile"
    - curtin in-target -- /bin/bash -c "chmod 777 -R /home/jhon/projects/"
    - curtin in-target -- /bin/bash -c "chmod 777 -R /home/jhon/Makefile"

    # Mensagem final
    - curtin in-target -- /bin/bash -c "echo '===================================================================================='"
    - curtin in-target -- /bin/bash -c "echo 'Configuração concluída. Por favor, reinicie o sistema para aplicar as alterações...'"
    - curtin in-target -- /bin/bash -c "echo '===================================================================================='"
